(define (my-append a b)
  (define (last a)
    (if (null? (cdr a))
        (car a)
        (last (cdr a))
    )
  )
  (define (all-but-last a)
    (if (null? (cdr a))
        ()
        (cons (car a) (all-but-last (cdr a)))
    )
  )
  (if (null? a)
      b
      (my-append (all-but-last a) (cons (last a) b))
  )
)

(define (replicate x n)
  (if (= n 0)
      ()
      (cons x (replicate x (- n 1)))
  )
)

(define (uncompress s)
  (if (null? s)
      ()
      (my-append
       (replicate (car (car s)) (car (cdr (car s))))
       (uncompress (cdr s))
      )
  )
)
